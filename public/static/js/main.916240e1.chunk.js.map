{"version":3,"sources":["config.js","components/auth/SignUp.js","components/auth/SignIn.js","components/admins/AdminDashboard.js","components/admins/AdminNavBar.js","components/admins/newsTicker/AdminNewsTicker.js","components/admins/newsTicker/TickerNewForm.js","components/admins/stages/StageList.js","components/admins/stages/StageListRow.js","components/admins/stages/StageNewForm.js","components/admins/stages/StageEditForm.js","components/admins/calendar/AdminCalendar.js","components/admins/calendar/ConcertNewForm.js","components/admins/calendar/ConcertDetail.js","components/users/UserDashboard.js","components/users/UserNavBar.js","components/users/upcomingShows/UpcomingList.js","components/users/concerts/ConcertList.js","components/users/concerts/ConcertDetail.js","components/users/calendar/Calendar.js","components/newsTicker/NewsTicker.js","components/notFound/LottieControl.js","components/notFound/NotFound.js","App.js","index.js"],"names":["process","useStyles","makeStyles","theme","alert","marginBottom","spacing","paper","marginTop","display","flexDirection","alignItems","avatar","margin","description","textAlign","flexGrow","form","width","submit","SignUp","props","festivalName","onSubmit","error","classes","Container","maxWidth","className","Avatar","src","alt","Typography","component","variant","noValidate","Alert","severity","errorMessage","Grid","container","item","xs","TextField","name","required","fullWidth","label","autoFocus","type","Button","color","justify","to","SignIn","AdminDashboard","user","news","onNewTicker","showNewTickerForm","handleShowNewTickerForm","onLogout","useState","stages","updateStages","showNewForm","updateShowNewForm","updateError","useEffect","axios","get","config","withCredentials","then","res","data","role","onNew","handleShowNewForm","post","catch","err","response","onEdit","stage","patch","_id","updatedStages","map","singleStage","onDelete","stageId","delete","filteredStages","filter","CircularProgress","AdminNavBar","Navbar","expand","Brand","Nav","Link","onClick","AdminNewsTicker","handleSubmit","e","preventDefault","newNews","message","target","value","duration","Fab","size","aria-label","TickerNewForm","InputLabelProps","shrink","defaultValue","InputProps","inputProps","min","max","StageList","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","i","StageListRow","showEditForm","updateShowEditForm","scope","concerts","length","StageNewForm","StageEditForm","updateStage","onChange","event","text","clonedStage","JSON","parse","stringify","StyledModal","Modal","styled","AdminCalendar","updateConcerts","newFormOpen","updateNewFormOpen","dateOnNew","updateDateOnNew","showOpen","updateShowOpen","concert","updateConcert","festivalStart","festivalEnd","stageName","match","params","resourceId","title","bandname","start","starttime","end","endtime","toggleNewForm","toggleShowOpen","plugins","resourceTimeGridPlugin","scrollGridPlugin","interactionPlugin","initialView","validRange","visibleRange","headerToolbar","center","resources","id","eventTimeFormat","hour","minute","omitZeroMinute","meridiem","allDaySlot","dayMinWidth","height","eventColor","eventTextColor","events","dateClick","calendar","dateStr","eventClick","_def","isOpen","onBackgroundClick","onEscapeKeydown","Date","day","image","newConcert","concertId","filtered","padding","input","picker","ConcertNewForm","moment","format","step","add","placeholder","multiline","rows","minHeight","minWidth","ConcertDetail","Card","CardMedia","CardContent","gutterBottom","enttime","CardActions","background","UserDashboard","favorites","updateFavorite","upcomingHeader","updateUpcomingHeader","upcoming","updateUpcoming","upcomingFavorites","header","UserNavBar","Toggle","aria-controls","Collapse","UpcomingList","List","ListItem","handleClick","ListItemText","primary","secondary","ConcertList","root","media","paddingTop","transform","marginLeft","transition","transitions","create","shortest","expandOpen","expanded","setExpanded","isFavorite","updateIsFavorite","playtime","some","CardHeader","test","action","IconButton","subheader","disableSpacing","clsx","aria-expanded","in","timeout","unmountOnExit","paragraph","Calendar","eventBorderColor","NewsTicker","style","whiteSpace","join","LottieControl","defaultOptions","loop","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","options","NotFound","Component","withRouter","updateUser","fetchingUser","updateFetchingUser","updateFavorites","calendarStages","updateCalendarStages","calendarEvents","updateCalendarEvents","updateNews","updateShowNewTickerForm","redirectPath","updateRedirectPath","history","push","handleGetNews","setInterval","a","console","log","msg","handleSignUp","password","passwordConfirmation","newUser","handleSignIn","handleLogout","handleUpdateFavorite","handleNewTicker","newMessage","exact","path","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.916240e1.chunk.js","sourcesContent":["export default {\n\tAPI_URL: process.env.REACT_APP_SERVER_URL,\n\tFESTIVAL_NAME: process.env.REACT_APP_FESTIVAL_NAME,\n\tFESTIVAL_START_DATE: process.env.REACT_APP_FESTIVAL_START_DATE,\n\tFESTIVAL_END_DATE: process.env.REACT_APP_FESTIVAL_END_DATE,\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction SignUp(props) {\n  const { festivalName, onSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar\n          className={classes.avatar}\n          src=\"/public/logo512.png\"\n          alt=\"moep-avatar\"\n        />\n        <Typography component=\"h1\" variant=\"h3\">\n          {festivalName} - Planer\n        </Typography>\n        <Typography className={classes.description}>\n          Nullam accumsan lorem in dui. Nulla porta dolor. Etiam imperdiet\n          imperdiet orci.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          Sign Up\n        </Typography>\n      </div>\n      <form onSubmit={onSubmit} className={classes.form} noValidate>\n        {error && (\n          <Alert className={classes.alert} severity=\"error\">\n            {error.errorMessage}\n          </Alert>\n        )}\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Username\"\n              autoFocus\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"passwordConfirmation\"\n              label=\"Password Confirmation\"\n              type=\"password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to={\"/\"}>Already have an account? Sign in</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  description: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    flexGrow: 1,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default SignUp;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction SignIn(props) {\n  const { festivalName, onSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar\n          className={classes.avatar}\n          src=\"/public/logo512.png\"\n          alt=\"moep-avatar\"\n        />\n        <Typography component=\"h1\" variant=\"h3\">\n          {festivalName} - Planer\n        </Typography>\n        <Typography className={classes.description}>\n          Nullam accumsan lorem in dui. Nulla porta dolor. Etiam imperdiet\n          imperdiet orci.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          Sign In\n        </Typography>\n      </div>\n      <form onSubmit={onSubmit} className={classes.form} noValidate>\n        {error && (\n          <Alert className={classes.alert} severity=\"error\">\n            {error.errorMessage}\n          </Alert>\n        )}\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Username\"\n              autoFocus\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to={\"/signup\"}>No account yet? Sign up</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  description: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    flexGrow: 1,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default SignIn;\n","import axios from \"axios\";\nimport config from \"../../config\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AdminNavBar, AdminNewsTicker, StageList } from \"../index\";\nimport { Grid, CircularProgress } from \"@material-ui/core/\";\nimport \"./Admin.css\";\n\nfunction AdminDashboard(props) {\n  const {\n    user,\n    news,\n    onNewTicker,\n    showNewTickerForm,\n    handleShowNewTickerForm,\n    onLogout,\n  } = props;\n  const [stages, updateStages] = useState([]);\n  const [showNewForm, updateShowNewForm] = useState(false);\n  const [error, updateError] = useState(null);\n\n  // fetch stages on mount\n  useEffect(() => {\n    axios\n      .get(`${config.API_URL}/api/stages`, { withCredentials: true })\n      .then((res) => {\n        updateStages(res.data);\n      });\n  }, []);\n\n  const handleNewStage = (name) => {\n    axios\n      .post(\n        `${config.API_URL}/api/stage/create`,\n        { name },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        updateStages([res.data, ...stages]);\n        updateError(null);\n        updateShowNewForm(false);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleShowNewForm = () => {\n    updateShowNewForm(true);\n  };\n\n  const handleEdit = (stage) => {\n    axios\n      .patch(\n        `${config.API_URL}/api/stage/${stage._id}/update`,\n        { name: stage.name },\n        { withCredentials: true }\n      )\n      .then(() => {\n        let updatedStages = stages.map((singleStage) => {\n          if (stage._id === singleStage._id) {\n            singleStage.name = stage.name;\n          }\n          return singleStage;\n        });\n        updateStages(updatedStages);\n        updateError(null);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleDelete = (stageId) => {\n    axios\n      .delete(`${config.API_URL}/api/stage/${stageId}/delete`, {\n        withCredentials: true,\n      })\n      .then(() => {\n        let filteredStages = stages.filter((stage) => {\n          return stage._id !== stageId;\n        });\n        updateStages(filteredStages);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  if (!user) {\n    return <Redirect to={\"/\"} />;\n  } else if (user.role !== \"admin\") {\n    return <Redirect to={\"/welcome\"} />;\n  }\n  if (!stages) return <CircularProgress />;\n\n  return (\n    <Grid container spacing={8} className=\"admin\">\n      <AdminNavBar user={user} onLogout={onLogout} />\n      <Grid item xs={12}>\n        <AdminNewsTicker\n          news={news}\n          onNew={onNewTicker}\n          showNewForm={showNewTickerForm}\n          handleShowNewForm={handleShowNewTickerForm}\n          error={error}\n        />\n        <StageList\n          onNew={handleNewStage}\n          showNewForm={showNewForm}\n          handleShowNewForm={handleShowNewForm}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          error={error}\n          stages={stages}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport config from \"../../config\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nfunction AdminNavBar(props) {\n  const { user, onLogout } = props;\n  const festivalName = config.FESTIVAL_NAME;\n\n  return (\n    <Navbar className=\"navbar\" expand=\"lg\">\n      <Navbar.Brand>\n        <Link to=\"/admin\">{festivalName} Planer - Admin CMS</Link>\n      </Navbar.Brand>\n\n      <Nav>\n        <Nav.Link variant=\"outline-success\" onClick={onLogout}>\n          Logout {user.name}\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default AdminNavBar;\n","import React from \"react\";\nimport { Fab, Grid, Typography } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { NewsTicker, TickerNewForm } from \"../..\";\n\nfunction AdminNewsTicker(props) {\n  const { news, onNew, showNewForm, handleShowNewForm, error } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newNews = {\n      message: e.target.message.value,\n      duration: e.target.duration.value,\n    };\n    onNew(newNews);\n  };\n\n  return (\n    <Grid className=\"adminNewsTicker\">\n      <Typography component=\"h1\" variant=\"h5\">\n        Ticker News\n        {showNewForm ? (\n          <TickerNewForm handleSubmit={handleSubmit} error={error} />\n        ) : (\n          <Fab\n            className=\"actionIcon\"\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"add\"\n          >\n            <AddIcon onClick={handleShowNewForm} />\n          </Fab>\n        )}\n      </Typography>\n      {!showNewForm &&\n        (news ? (\n          <NewsTicker news={news} />\n        ) : (\n          <p className=\"noTickerNews\">No current ticker news</p>\n        ))}\n    </Grid>\n  );\n}\n\nexport default AdminNewsTicker;\n","import React from \"react\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction TickerNewForm(props) {\n  const { handleSubmit, error } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && (\n        <Alert className=\"alert\" severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <Grid container justify=\"space-between\">\n        <TextField\n          name=\"message\"\n          label=\"Ticker message\"\n          className=\"inputTickerMessage\"\n          variant=\"outlined\"\n          required\n          autoFocus\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          name=\"duration\"\n          label=\"Duration in minutes\"\n          type=\"number\"\n          defaultValue={60}\n          className=\"inputTickerDuration\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          InputProps={{ inputProps: { min: 1, max: 1440 } }}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submit\"\n        >\n          Add News\n        </Button>\n        {/* ToDo: Add Cancel Button */}\n      </Grid>\n    </form>\n  );\n}\n\nexport default TickerNewForm;\n","import React from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n  Fab,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { StageListRow, StageNewForm } from \"../../index\";\n\nfunction StageList(props) {\n  const {\n    stages,\n    error,\n    onNew,\n    showNewForm,\n    handleShowNewForm,\n    onEdit,\n    onDelete,\n  } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onNew(e.target.name.value);\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Stages\n        {showNewForm ? (\n          <StageNewForm handleSubmit={handleSubmit} error={error} />\n        ) : (\n          <Fab\n            className=\"actionIcon\"\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"add\"\n          >\n            <AddIcon onClick={handleShowNewForm} />\n          </Fab>\n        )}\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stage name</TableCell>\n              <TableCell align=\"right\">Concerts</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {stages.map((stage, i) => {\n              return (\n                <StageListRow\n                  key={i}\n                  error={error}\n                  stage={stage}\n                  onEdit={onEdit}\n                  onDelete={onDelete}\n                />\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default StageList;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { StageEditForm } from \"../../index\";\n\nfunction StageListRow(props) {\n  const [showEditForm, updateShowEditForm] = useState(false);\n  const { stage, error, onEdit, onDelete } = props;\n\n  const handleUpdate = (stage) => {\n    onEdit(stage);\n    // ToDo: show form if validation errors\n    if (!error) updateShowEditForm(false)\n  };\n\n  const handleShowEditForm = () => {\n    updateShowEditForm(true) \n  };\n\n  return (\n    <TableRow key={stage.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {showEditForm ? (\n          <StageEditForm onEdit={handleUpdate} stage={stage} error={error} />\n        ) : (\n          <Link to={`/admin/${stage.name}/calendar`}>{stage.name}</Link>\n        )}\n      </TableCell>\n      <TableCell align=\"right\">\n        {stage.concerts.length}\n      </TableCell>\n      <TableCell align=\"right\">\n        {!showEditForm ? <EditIcon onClick={handleShowEditForm} /> : \"\"}\n        <DeleteIcon onClick={() => onDelete(stage._id)}/>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default StageListRow;\n","import React from \"react\";\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction StageNewForm(props) {\n  const { handleSubmit, error } = props;\n\n  return (\n    <form onSubmit={handleSubmit} noValidate=\"off\">\n      {error && (\n        <Alert className=\"alert\" severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <Grid container justify=\"space-between\">\n        <TextField\n          name=\"name\"\n          label=\"Stage name\"\n          className=\"inputStageName\"\n          variant=\"outlined\"\n          required\n          autoFocus\n        />\n        <Button\n          type=\"submit\"\n          className=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Stage\n        </Button>\n        {/* ToDo: Add Cancel Button */}\n      </Grid>\n    </form>\n  );\n}\n\nexport default StageNewForm;\n","import React, { useState } from \"react\";\nimport { Button, TextField, Grid } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction StageEditForm(props) {\n  const [stage, updateStage] = useState(props.stage);\n  const { error, onEdit } = props;\n\n  const handleNameChange = (event) => {\n    let text = event.target.value;\n    let clonedStage = JSON.parse(JSON.stringify(stage));\n    clonedStage.name = text;\n\n    updateStage(clonedStage);\n  };\n\n  return (\n    <>\n      {error && (\n        <Alert className=\"alert\" severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <Grid className=\"editStageForm\" container justify=\"space-between\">\n        <TextField\n          name=\"name\"\n          label=\"Stage name\"\n          className=\"inputStageName\"\n          variant=\"outlined\"\n          required\n          autoFocus\n          onChange={handleNameChange}\n          value={stage.name}\n        />\n        <Button\n          className=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            onEdit(stage);\n          }}\n        >\n          Update\n        </Button>\n        {/* ToDo: Add Cancel Button */}\n      </Grid>\n    </>\n  );\n}\n\nexport default StageEditForm;\n","import axios from \"axios\";\nimport config from \"../../../config\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport { CircularProgress, Grid, Typography } from \"@material-ui/core\";\nimport { ConcertNewForm, AdminConcertDetail, AdminNavBar } from \"../../index\";\n\nfunction AdminCalendar(props) {\n  const { user, onLogout } = props;\n  const [stage, updateStage] = useState({});\n  const [error, updateError] = useState(null);\n  const [concerts, updateConcerts] = useState([]);\n  const [newFormOpen, updateNewFormOpen] = useState(false);\n  const [dateOnNew, updateDateOnNew] = useState(\"\");\n  const [showOpen, updateShowOpen] = useState(false);\n  const [concert, updateConcert] = useState(null);\n  const festivalStart = config.FESTIVAL_START_DATE;\n  const festivalEnd = config.FESTIVAL_END_DATE;\n\n  // get all concerts on mount\n  useEffect(() => {\n    let stageName = props.match.params.stageName;\n\n    axios\n      .get(`${config.API_URL}/api/stage/${stageName}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        const stage = res.data;\n\n        updateStage(stage);\n        updateConcerts(\n          stage.concerts.map((concert) => {\n            // map concerts to fullcalendar entries\n            return {\n              resourceId: stage._id,\n              title: concert.bandname,\n              start: concert.starttime,\n              end: concert.endtime,\n            };\n          })\n        );\n      })\n      .catch((err) => updateError(err.response.data));\n  }, []);\n\n  // helper function to toggle overlay\n  const toggleNewForm = () => {\n    updateNewFormOpen(!newFormOpen);\n  };\n\n  // toggle new form when calendar date is clicked\n  const handleDateClick = (calendar) => {\n    updateDateOnNew(calendar.dateStr);\n    toggleNewForm();\n  };\n\n  // create new concert after submitting the form\n  const handleNewConcert = (e) => {\n    e.preventDefault();\n    const starttime = new Date(\n      `${e.target.day.value}T${e.target.starttime.value}`\n    );\n    const endtime = new Date(`${e.target.day.value}T${e.target.endtime.value}`);\n\n    axios\n      .post(\n        `${config.API_URL}/api/stages/${stage._id}/concerts/create`,\n        {\n          bandname: e.target.bandname.value,\n          starttime: starttime,\n          endtime: endtime,\n          description: e.target.description.value,\n          image: e.target.image.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        const concert = res.data;\n        // map new concert to fullcalendar entriy\n        const newConcert = {\n          resourceId: stage._id,\n          title: concert.bandname,\n          start: concert.starttime,\n          end: concert.endtime,\n        };\n\n        updateConcerts([newConcert, ...concerts]);\n        updateError(null);\n        toggleNewForm();\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // get concert when calender event is clicked\n  const handleEventClick = (calendar) => {\n    const bandname = calendar.event._def.title;\n\n    axios\n      .get(`${config.API_URL}/api/concerts/${bandname}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateConcert(res.data);\n        toggleShowOpen();\n      });\n  };\n\n  const handleDelete = (concertId) => {\n    axios\n      .delete(`${config.API_URL}/api/concerts/${concertId}/delete`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        let filtered = concerts.filter(\n          (concert) => concert.title !== res.data.bandname\n        );\n        updateConcerts(filtered);\n        updateError(null);\n        toggleShowOpen();\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  if (!user) {\n    return <Redirect to={\"/\"} />;\n  } else if (user.role !== \"admin\") {\n    return <Redirect to={\"/welcome\"} />;\n  }\n  if (!stage) return <CircularProgress />;\n\n  return (\n    <Grid className=\"admin\" container spacing={8}>\n      <AdminNavBar user={user} onLogout={onLogout} />\n      <Grid className=\"adminCalendar\" item xs={12}>\n        <Typography component=\"h1\" variant=\"h5\">\n          {stage.name} - Concerts\n        </Typography>\n        <FullCalendar\n          plugins={[\n            resourceTimeGridPlugin,\n            scrollGridPlugin,\n            interactionPlugin,\n          ]}\n          initialView=\"resourceTimeGrid\"\n          validRange={{ start: festivalStart, end: festivalEnd }}\n          visibleRange={{ start: festivalStart, end: festivalEnd }}\n          headerToolbar={{ start: \"\", center: \"title\", end: \"\" }}\n          resources={[{ id: stage._id, title: \" \" }]}\n          eventTimeFormat={{\n            hour: \"numeric\",\n            minute: \"2-digit\",\n            omitZeroMinute: true,\n            meridiem: \"short\",\n          }}\n          allDaySlot={false}\n          dayMinWidth={260}\n          height={\"auto\"}\n          eventColor=\"#0e2a30\"\n          eventTextColor=\"#d7d7d7\"\n          events={concerts}\n          dateClick={handleDateClick}\n          eventClick={handleEventClick}\n        />\n        {/* render new form as overlay */}\n        <ModalProvider>\n          <StyledModal\n            isOpen={newFormOpen}\n            onBackgroundClick={toggleNewForm}\n            onEscapeKeydown={toggleNewForm}\n          >\n            <ConcertNewForm\n              festivalStart={festivalStart}\n              festivalEnd={festivalEnd}\n              dateOnNew={dateOnNew}\n              onSubmit={handleNewConcert}\n              error={error}\n            />\n          </StyledModal>\n        </ModalProvider>\n        {/* render show concert details as overlay */}\n        <ModalProvider>\n          <StyledModal\n            isOpen={showOpen}\n            onBackgroundClick={toggleShowOpen}\n            onEscapeKeydown={toggleShowOpen}\n          >\n            <AdminConcertDetail\n              stageName={stage.name}\n              concert={concert}\n              onDelete={handleDelete}\n            />\n          </StyledModal>\n        </ModalProvider>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst StyledModal = Modal.styled`\n  width: 40rem;\n  height: 40rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n`;\n\nexport default AdminCalendar;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\n\nfunction ConcertNewForm(props) {\n  const { festivalStart, festivalEnd, dateOnNew, onSubmit, error } = props;\n  const classes = useStyles();\n  \n  return (\n    <form onSubmit={onSubmit} className={classes.form} noValidate=\"off\">\n      <Typography component=\"h1\" variant=\"h5\">\n        Add new Concert\n      </Typography>\n      {error && (\n        <Alert className={classes.alert} severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <TextField\n        name=\"bandname\"\n        label=\"Bandname\"\n        className={classes.input}\n        variant=\"outlined\"\n        required\n        fullWidth\n        autoFocus\n      />\n      <Grid container justify=\"space-between\">\n        <TextField\n          name=\"day\"\n          label=\"Day\"\n          type=\"date\"\n          className={classes.picker}\n          variant=\"outlined\"\n          defaultValue={moment(dateOnNew).format(\"yyyy-MM-DD\")}\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          InputProps={{inputProps: { min: festivalStart, max: festivalEnd} }}\n        />\n        <TextField\n          name=\"starttime\"\n          label=\"Start time\"\n          type=\"time\"\n          defaultValue={moment(dateOnNew).format(\"HH:mm:ss\")}\n          className={classes.picker}\n          variant=\"outlined\"\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300, // 5 min\n          }}\n        />\n        <TextField\n          name=\"endtime\"\n          label=\"Endtime time\"\n          type=\"time\"\n          defaultValue={moment(dateOnNew).add(2, \"h\").format(\"HH:mm:ss\")}\n          className={classes.picker}\n          variant=\"outlined\"\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 9000, //  15min\n          }}\n        />\n      </Grid>\n      <TextField\n        className={classes.input}\n        name=\"image\"\n        type=\"url\"\n        placeholder=\"https://\"\n        variant=\"outlined\"\n        fullWidth\n        label=\"Band image\"\n        autoFocus\n      />\n      <TextField\n        className={classes.input}\n        name=\"description\"\n        variant=\"outlined\"\n        multiline\n        rows={4}\n        fullWidth\n        label=\"Band description\"\n        autoFocus\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Add Concert\n      </Button>\n      {/* ToDo: Add Cancel Button */}\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\",\n    padding: theme.spacing(3),\n  },\n  input: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  picker: {\n    width: \"30%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default ConcertNewForm;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nfunction ConcertDetail(props) {\n  const { stageName, concert, onDelete } = props;\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.container}>\n      <CardMedia\n        component=\"img\"\n        height=\"300\"\n        alt={`${concert.title}-image`}\n        src={concert.image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {concert.bandname}\n        </Typography>\n        <Typography gutterBottom variant=\"body2\">\n          {moment(concert.starttime).format(\"yyyy-MM-DD\")} from{\" \"}\n          {moment(concert.starttime).format(\"hh:mm A\")} to{\" \"}\n          {moment(concert.enttime).format(\"hh:mm A\")} on {stageName}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {concert.description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          onClick={() => {\n            onDelete(concert._id);\n          }}\n          size=\"small\"\n          color=\"primary\"\n        >\n          delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles({\n  container: {\n    minHeight: \"35rem\",\n    minWidth: \"35rem\",\n    margin: \"auto\",\n  },\n});\n\nexport default ConcertDetail;\n","import axios from \"axios\";\nimport config from \"../../config\";\nimport { React, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { NewsTicker, UpcomingList, UserNavBar } from \"../index\";\n\nfunction UserDashboard(props) {\n  const { user, news, favorites, updateFavorite, onLogout } = props;\n  const [upcomingHeader, updateUpcomingHeader] = useState(\"\");\n  const [upcoming, updateUpcoming] = useState([]);\n  const classes = useStyles();\n\n  // fetch data on update\n  useEffect(() => {\n    // get upcoming favorites\n    axios\n      .get(`${config.API_URL}/api/upcoming/favorites`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        const upcomingFavorites = res.data;\n\n        // if no upcoming favorites get next 5 concerts\n        if (upcomingFavorites.length == 0) {\n          axios\n            .get(`${config.API_URL}/api/upcoming`, { withCredentials: true })\n            .then((res) => {\n              updateUpcoming(res.data);\n              updateUpcomingHeader(\"Upcoming shows\");\n            });\n        } else {\n          updateUpcoming(upcomingFavorites);\n          updateUpcomingHeader(\"Your favorites\");\n        }\n      });\n  }, [favorites]);\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <>\n      <UserNavBar onLogout={onLogout} user={user} />\n      <div>\n        <Grid className={classes.container} container>\n          <Grid item xs={12} className=\"trans radius content-padding\">\n            {news && <NewsTicker news={news} />}\n\n            <UpcomingList\n              user={user}\n              concerts={upcoming}\n              favorites={favorites}\n              updateFavorite={updateFavorite}\n              header={upcomingHeader}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: \"600px\",\n    background: \"rgba (0, 0, 0, 0.5)\",\n  },\n}));\n\nexport default UserDashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"./UserNavBar.css\";\n\nfunction UserNavBar(props) {\n  const { onLogout } = props;\n\n  return (\n    <div>\n      <Navbar className=\"color\" expand=\"sm\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/welcome\">\n            <img src=\"/IronH.png\" />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav>\n            <Nav.Link>\n              <Link to=\"/lineup\" className=\"linkColor\">\n                Lineup\n              </Link>\n            </Nav.Link>\n            <Nav.Link>\n              <Link to=\"/timetable\" className=\"linkColor\">\n                Timetable\n              </Link>\n            </Nav.Link>\n            <Nav.Link onClick={onLogout}>\n              <Link className=\"linkColor\">Logout</Link>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default UserNavBar;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport { ConcertDetail } from \"../../index\";\n\nfunction UpcomingList(props) {\n  const { header, concerts, favorites, updateFavorite } = props;\n  const [concert, updateConcert] = useState(null);\n  const [showOpen, updateShowOpen] = useState(false);\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // handle Click on ListItem\n  const handleClick = (concert) => {\n    updateConcert(concert);\n    toggleShowOpen();\n  };\n\n  return (\n    <div>\n      <h2 className=\"center\"> {header} </h2>\n      <div className=\"center\">\n        <Link\n          className=\"center linkDark linkPadding linkSize\"\n          to={\"/timetable\"}\n        >\n          Timetable\n        </Link>\n        <Link className=\"center linkDark linkPadding linkSize\" to={\"/lineup\"}>\n          Lineup\n        </Link>\n      </div>\n      <List>\n        {concerts.map((concert, i) => {\n          return (\n            <ListItem\n              key={i}\n              onClick={() => {\n                handleClick(concert);\n              }}\n            >\n              <ListItemText\n                alignItems=\"center\"\n                primary={concert.bandname}\n                secondary={`${moment(concert.starttime).format(\n                  \"yyyy-MM-DD\"\n                )} starts ${moment(concert.starttime).format(\"hh:mm A\")} on ${\n                  concert.stage.name\n                }`}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n      {/* render show concert details as overlay */}\n      {concert && (\n        <ModalProvider>\n          <StyledModal\n            isOpen={showOpen}\n            onBackgroundClick={toggleShowOpen}\n            onEscapeKeydown={toggleShowOpen}\n          >\n            <ConcertDetail\n              concert={concert}\n              favorites={favorites}\n              updateFavorite={updateFavorite}\n            />\n          </StyledModal>\n        </ModalProvider>\n      )}\n    </div>\n  );\n}\n\nconst StyledModal = Modal.styled`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border-radius: 15px\n`;\n\nexport default UpcomingList;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { ConcertDetail, UserNavBar } from \"../../index\";\n\nfunction ConcertList(props) {\n  const { user, concerts, favorites, updateFavorite, onLogout } = props;\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <>\n      <UserNavBar onLogout={onLogout} />\n      <div className=\"center margin\">\n        <div className=\"content-padding\">\n          {concerts.map((concert, i) => {\n            return (\n              <ConcertDetail\n                key={i}\n                concert={concert}\n                favorites={favorites}\n                updateFavorite={updateFavorite}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ConcertList;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Collapse,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport moment from \"moment\";\n\nfunction ConcertDetail(props) {\n  const { concert, favorites, updateFavorite } = props;\n  const [expanded, setExpanded] = useState(false);\n  const [isFavorite, updateIsFavorite] = useState(false);\n  const classes = useStyles();\n\n  const playtime = `${moment(concert.starttime).format(\"dddd LT\")} - ${\n    concert.stage.name\n  }`;\n\n  useEffect(() => {\n    favorites.some((i) => i._id == concert._id)\n      ? updateIsFavorite(true)\n      : updateIsFavorite(false);\n  });\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        className={classes.test}\n        action={\n          <IconButton\n            onClick={() => {\n              updateFavorite(concert);\n            }}\n            aria-label=\"toggle favorites\"\n          >\n            {isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n          </IconButton>\n        }\n        title={concert.bandname}\n        subheader={playtime}\n      />\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <CardMedia\n            className={classes.media}\n            image={concert.image}\n            title={concert.bandname}\n          />\n\n          <Typography paragraph></Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {concert.description}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    //background: `blue`,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nexport default ConcertDetail;\n","import axios from \"axios\";\nimport config from \"../../../config\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Grid } from \"@material-ui/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport { UserNavBar, ConcertDetail } from \"../../index\";\nimport \"./Calendar.css\";\n\nfunction Calendar(props) {\n  const { user, stages, concerts, favorites, updateFavorite, onLogout } = props;\n  const [showOpen, updateShowOpen] = useState(false);\n  const [concert, updateConcert] = useState(null);\n  const festivalStart = config.FESTIVAL_START_DATE;\n  const festivalEnd = config.FESTIVAL_END_DATE;\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // get concert when calender event is clicked\n  const handleEventClick = (calendar) => {\n    const bandname = calendar.event._def.title;\n\n    axios\n      .get(`${config.API_URL}/api/concerts/${bandname}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateConcert(res.data);\n        toggleShowOpen();\n      });\n  };\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <>\n      <UserNavBar onLogout={onLogout} />\n      <Grid className=\"calendar trans content-padding\" container spacing={3}>\n        <Grid item xs={12}>\n          <h2 className=\"center\">Timetable</h2>\n          <FullCalendar\n            plugins={[\n              resourceTimeGridPlugin,\n              scrollGridPlugin,\n              interactionPlugin,\n            ]}\n            initialView=\"resourceTimeGridDay\"\n            validRange={{ start: festivalStart, end: festivalEnd }}\n            visibleRange={{ start: festivalStart, end: festivalEnd }}\n            headerToolbar={{ start: \"title\", center: \"\", end: \"prev,next\" }}\n            eventTimeFormat={{\n              hour: \"numeric\",\n              minute: \"2-digit\",\n              omitZeroMinute: true,\n              meridiem: \"short\",\n            }}\n            allDaySlot={false}\n            dayMinWidth={258}\n            height={\"auto\"}\n            eventColor=\"#0e2a30\"\n            eventBorderColor=\"#0e2a30\"\n            eventTextColor=\"#d7d7d7\"\n            resources={stages}\n            events={concerts}\n            eventClick={handleEventClick}\n          />\n          {/* render show concert details as overlay */}\n          <ModalProvider>\n            <StyledModal\n              isOpen={showOpen}\n              onBackgroundClick={toggleShowOpen}\n              onEscapeKeydown={toggleShowOpen}\n            >\n              <ConcertDetail\n                concert={concert}\n                favorites={favorites}\n                updateFavorite={updateFavorite}\n              />\n            </StyledModal>\n          </ModalProvider>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst StyledModal = Modal.styled`\n  width: 20rem;\n  height: 20rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n`;\n\nexport default Calendar;\n","import React from \"react\";\nimport Ticker from \"react-ticker\";\n\nfunction NewsTicker(props) {\n  const { news } = props;\n\n  return (\n    <Ticker>\n      {() => <p style={{ whiteSpace: \"nowrap\" }}> {news.join(\" +++ \")} +++</p>}\n    </Ticker>\n  );\n}\n\nexport default NewsTicker;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\n\nfunction LottieControl(props) {\n  const { height, width, animation } = props;\n  //animation json input, siehe NotFound\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  return (\n    <div>\n      <Lottie options={defaultOptions} height={height} width={width} />\n    </div>\n  );\n}\nexport default LottieControl;\n","import React, { Component } from \"react\";\nimport data from \"./animation/animation.json\";\nimport LottieControl from \"./LottieControl\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h2>404</h2>\n        <h5>you are at the wrong campsite, the festival is not here</h5>\n        <LottieControl animation={data} />\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\nimport config from \"./config\";\nimport { React, useState, useEffect } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport {\n  SignUp,\n  SignIn,\n  AdminDashboard,\n  AdminCalendar,\n  UserDashboard,\n  ConcertList,\n  Calendar,\n  NotFound,\n} from \"./components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const [user, updateUser] = useState(null);\n  const [fetchingUser, updateFetchingUser] = useState(true);\n  const [concerts, updateConcerts] = useState([]);\n  const [favorites, updateFavorites] = useState([]);\n  const [calendarStages, updateCalendarStages] = useState([]);\n  const [calendarEvents, updateCalendarEvents] = useState([]);\n  const [news, updateNews] = useState([]);\n  const [showNewTickerForm, updateShowNewTickerForm] = useState(false);\n  const [redirectPath, updateRedirectPath] = useState(null);\n  const [error, updateError] = useState(null);\n  const { history } = props;\n  const festivalName = config.FESTIVAL_NAME;\n\n  // handle redirects\n  useEffect(() => {\n    if (redirectPath === \"signin\") {\n      history.push(\"/\");\n    } else if (redirectPath === \"adminDashboard\") {\n      history.push(\"/admin\");\n    } else if (redirectPath === \"userDashboard\") {\n      history.push(\"/welcome\");\n    }\n  }, [history, redirectPath]);\n\n  // fetch data on mount\n  useEffect(() => {\n    // check if user has a session\n    axios\n      .get(`${config.API_URL}/api/user`, { withCredentials: true })\n      .then((res) => {\n        updateUser(res.data);\n        updateFavorites(res.data.concerts);\n        updateFetchingUser(false);\n      })\n      .catch(() => {\n        updateFetchingUser(false);\n        updateRedirectPath(\"signin\");\n      });\n\n    // get all stages and map to fullcalendar resources\n    axios\n      .get(`${config.API_URL}/api/stages`, { withCredentials: true })\n      .then((res) => {\n        updateCalendarStages(\n          res.data.map((stage) => {\n            return {\n              id: stage._id,\n              title: stage.name,\n            };\n          })\n        );\n      })\n      .catch((err) => updateError(err.response.data));\n\n    // get all concerts\n    axios\n      .get(`${config.API_URL}/api/concerts`, { withCredentials: true })\n      .then((res) => {\n        const concerts = res.data;\n\n        updateConcerts(concerts);\n        // map concerts also to fullcalendar entries\n        updateCalendarEvents(\n          concerts.map((concert) => {\n            return {\n              resourceId: concert.stage._id,\n              title: concert.bandname,\n              start: concert.starttime,\n              end: concert.endtime,\n            };\n          })\n        );\n      });\n\n    // Ticker messages (news)\n    // get once on components mount\n    handleGetNews();\n    // then fetch every minute\n    try {\n      setInterval(async () => {\n        await handleGetNews();\n      }, 10000);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // handle get news\n  const handleGetNews = () => {\n    axios\n      .get(`${config.API_URL}/api/news`, { withCredentials: true })\n      .then((res) => {\n        const news = res.data;\n\n        if (news) {\n          updateNews(news?.map((msg) => msg.message));\n        } else {\n          updateNews(null);\n        }\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    const { name, password, passwordConfirmation } = e.target;\n    let newUser = {\n      name: name.value,\n      password: password.value,\n      passwordConfirmation: passwordConfirmation.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/auth/signup`, newUser, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateUser(res.data);\n        updateError(null);\n        updateRedirectPath(\"userDashboard\");\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    const { name, password } = e.target;\n    let user = {\n      name: name.value,\n      password: password.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/auth/signin`, user, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateUser(res.data);\n        updateError(null);\n\n        if (res.data.role === \"admin\") {\n          updateRedirectPath(\"adminDashboard\");\n        } else {\n          updateRedirectPath(\"userDashboard\");\n        }\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    axios\n      .get(`${config.API_URL}/api/auth/logout`, { withCredentials: true })\n      .then(() => {\n        updateUser(null);\n        updateRedirectPath(\"signin\");\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  const handleUpdateFavorite = (concert) => {\n    axios\n      .post(\n        `${config.API_URL}/api/upcoming/update`,\n        { favorites, concert },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        updateFavorites(res.data);\n        updateError(null);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleNewTicker = (newMessage) => {\n    axios\n      .post(\n        `${config.API_URL}/api/news/create`,\n        {\n          message: newMessage.message,\n          duration: newMessage.duration,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        const message = res.data.message;\n\n        !news ? updateNews([message]) : updateNews([message, ...news]);\n        updateError(null);\n        updateShowNewTickerForm(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleShowNewTickerForm = () => {\n    updateShowNewTickerForm(true);\n  };\n\n  if (fetchingUser) return <CircularProgress />;\n\n  return (\n    <>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return (\n              <SignIn\n                festivalName={festivalName}\n                error={error}\n                onSubmit={handleSignIn}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/signup\"\n          render={() => {\n            return (\n              <SignUp\n                festivalName={festivalName}\n                error={error}\n                onSubmit={handleSignUp}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/welcome\"\n          render={() => {\n            return (\n              <UserDashboard\n                user={user}\n                news={news}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/lineup\"\n          render={() => {\n            return (\n              <ConcertList\n                user={user}\n                concerts={concerts}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/timetable\"\n          render={() => {\n            return (\n              <Calendar\n                user={user}\n                stages={calendarStages}\n                concerts={calendarEvents}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/admin\"\n          render={() => {\n            return (\n              <AdminDashboard\n                user={user}\n                news={news}\n                onNewTicker={handleNewTicker}\n                showNewTickerForm={showNewTickerForm}\n                handleShowNewTickerForm={handleShowNewTickerForm}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/admin/:stageName/calendar\"\n          render={(routeProps) => {\n            return (\n              <AdminCalendar\n                user={user}\n                onLogout={handleLogout}\n                {...routeProps}\n              />\n            );\n          }}\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}