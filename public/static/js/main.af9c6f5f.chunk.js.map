{"version":3,"sources":["config.js","components/auth/SignUp.js","components/auth/SignIn.js","components/admins/AdminDashboard.js","components/admins/AdminNavBar.js","components/admins/newsTicker/AdminNewsTicker.js","components/admins/newsTicker/TickerNewForm.js","components/admins/stages/StageList.js","components/admins/stages/StageListRow.js","components/admins/stages/StageNewForm.js","components/admins/stages/StageEditForm.js","components/admins/calendar/AdminCalendar.js","components/admins/calendar/ConcertNewForm.js","components/admins/calendar/ConcertDetail.js","components/users/UserDashboard.js","components/users/UserNavBar.js","components/users/upcomingShows/UpcomingList.js","components/users/concerts/ConcertList.js","components/users/concerts/ConcertDetail.js","components/users/calendar/Calendar.js","components/newsTicker/NewsTicker.js","components/notFound/LottieControl.js","components/notFound/NotFound.js","App.js","index.js"],"names":["process","useStyles","makeStyles","theme","alert","marginBottom","spacing","paper","marginTop","display","flexDirection","alignItems","avatar","margin","description","textAlign","flexGrow","form","width","submit","SignUp","props","festivalName","onSubmit","error","classes","Container","maxWidth","className","Avatar","src","alt","Typography","component","variant","noValidate","Alert","severity","errorMessage","Grid","container","item","xs","TextField","name","required","fullWidth","label","autoFocus","type","Button","color","justify","to","SignIn","padding","AdminDashboard","user","news","onNewTicker","showNewTickerForm","handleShowNewTickerForm","onLogout","useState","stages","updateStages","showNewForm","updateShowNewForm","updateError","useEffect","axios","get","config","withCredentials","then","res","data","role","onNew","handleShowNewForm","post","catch","err","response","onEdit","stage","patch","_id","updatedStages","map","singleStage","onDelete","stageId","delete","filteredStages","filter","CircularProgress","AdminNavBar","Navbar","bg","expand","Brand","Nav","NavDropdown","title","id","Item","onClick","AdminNewsTicker","handleSubmit","e","preventDefault","newNews","message","target","value","duration","TickerNewForm","InputLabelProps","shrink","defaultValue","InputProps","inputProps","min","max","StageList","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","i","StageListRow","showEditForm","updateShowEditForm","scope","concerts","length","StageNewForm","StageEditForm","updateStage","onChange","event","text","clonedStage","JSON","parse","stringify","StyledModal","Modal","styled","AdminCalendar","updateConcerts","newFormOpen","updateNewFormOpen","dateOnNew","updateDateOnNew","showOpen","updateShowOpen","concert","updateConcert","festivalStart","festivalEnd","stageName","match","params","resourceId","bandname","start","starttime","end","endtime","toggleNewForm","toggleShowOpen","plugins","resourceTimeGridPlugin","scrollGridPlugin","interactionPlugin","initialView","validRange","visibleRange","headerToolbar","center","allDaySlot","dayMinWidth","height","resources","events","dateClick","calendar","dateStr","eventClick","_def","isOpen","onBackgroundClick","onEscapeKeydown","Date","day","image","newConcert","concertId","deleted","filtered","input","picker","ConcertNewForm","moment","format","step","add","placeholder","multiline","rows","minHeight","minWidth","ConcertDetail","Card","CardMedia","CardContent","gutterBottom","enttime","CardActions","size","UserDashboard","favorites","updateFavorite","upcomingHeader","updateUpcomingHeader","upcoming","updateUpcoming","upcomingFavorites","header","UserNavBar","Divider","UpcomingList","List","ListItem","handleClick","ListItemText","primary","secondary","ConcertList","root","media","paddingTop","transform","marginLeft","transition","transitions","create","shortest","expandOpen","expanded","setExpanded","isFavorite","updateIsFavorite","playtime","some","CardHeader","test","action","IconButton","subheader","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Calendar","NewsTicker","style","whiteSpace","join","LottieControl","defaultOptions","loop","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","options","NotFound","Component","withRouter","updateUser","fetchingUser","updateFetchingUser","updateFavorites","calendarStages","updateCalendarStages","calendarEvents","updateCalendarEvents","updateNews","updateShowNewTickerForm","redirectPath","updateRedirectPath","history","push","handleGetNews","setInterval","a","console","log","msg","handleSignUp","password","passwordConfirmation","newUser","handleSignIn","handleLogout","handleUpdateFavorite","handleNewTicker","newMessage","exact","path","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9c6f5f.chunk.js","sourcesContent":["export default {\n\tAPI_URL: process.env.REACT_APP_SERVER_URL,\n\tFESTIVAL_NAME: process.env.REACT_APP_FESTIVAL_NAME,\n\tFESTIVAL_START_DATE: process.env.REACT_APP_FESTIVAL_START_DATE,\n\tFESTIVAL_END_DATE: process.env.REACT_APP_FESTIVAL_END_DATE,\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction SignUp(props) {\n  const { festivalName, onSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar\n          className={classes.avatar}\n          src=\"/public/logo512.png\"\n          alt=\"moep-avatar\"\n        />\n        <Typography component=\"h1\" variant=\"h3\">\n          {festivalName} - Planer\n        </Typography>\n        <Typography className={classes.description}>\n          Nullam accumsan lorem in dui. Nulla porta dolor. Etiam imperdiet\n          imperdiet orci.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          Sign Up\n        </Typography>\n      </div>\n      <form onSubmit={onSubmit} className={classes.form} noValidate>\n        {error && (\n          <Alert className={classes.alert} severity=\"error\">\n            {error.errorMessage}\n          </Alert>\n        )}\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Username\"\n              autoFocus\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"passwordConfirmation\"\n              label=\"Password Confirmation\"\n              type=\"password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to={\"/\"}>Already have an account? Sign in</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  description: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    flexGrow: 1,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default SignUp;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction SignIn(props) {\n  const { festivalName, onSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar\n          className={classes.avatar}\n          src=\"/public/logo512.png\"\n          alt=\"moep-avatar\"\n        />\n        <Typography component=\"h1\" variant=\"h3\">\n          {festivalName} - Planer\n        </Typography>\n        <Typography className={classes.description}>\n          Nullam accumsan lorem in dui. Nulla porta dolor. Etiam imperdiet\n          imperdiet orci.\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\">\n          Sign In\n        </Typography>\n      </div>\n      <form onSubmit={onSubmit} className={classes.form} noValidate>\n        {error && (\n          <Alert className={classes.alert} severity=\"error\">\n            {error.errorMessage}\n          </Alert>\n        )}\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              name=\"name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"Username\"\n              autoFocus\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link to={\"/signup\"}>No account yet? Sign up</Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  description: {\n    margin: theme.spacing(3),\n    textAlign: \"center\",\n    flexGrow: 1,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default SignIn;\n","import axios from \"axios\";\nimport config from \"../../config\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, CircularProgress } from \"@material-ui/core/\";\nimport { AdminNavBar, AdminNewsTicker, StageList } from \"../index\";\nimport { Redirect } from \"react-router\";\n\nfunction AdminDashboard(props) {\n  const {\n    user,\n    news,\n    onNewTicker,\n    showNewTickerForm,\n    handleShowNewTickerForm,\n    onLogout,\n  } = props;\n  const [stages, updateStages] = useState([]);\n  const [showNewForm, updateShowNewForm] = useState(false);\n  const [error, updateError] = useState(null);\n  const classes = useStyles();\n\n  // fetch stages on mount\n  useEffect(() => {\n    axios\n      .get(`${config.API_URL}/api/stages`, { withCredentials: true })\n      .then((res) => {\n        updateStages(res.data);\n      });\n  }, []);\n\n  const handleNewStage = (name) => {\n    axios\n      .post(\n        `${config.API_URL}/api/stage/create`,\n        { name },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        updateStages([res.data, ...stages]);\n        updateError(null);\n        updateShowNewForm(false);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleShowNewForm = () => {\n    updateShowNewForm(true);\n  };\n\n  const handleEdit = (stage) => {\n    axios\n      .patch(\n        `${config.API_URL}/api/stage/${stage._id}/update`,\n        { name: stage.name },\n        { withCredentials: true }\n      )\n      .then(() => {\n        let updatedStages = stages.map((singleStage) => {\n          if (stage._id === singleStage._id) {\n            singleStage.name = stage.name;\n          }\n          return singleStage;\n        });\n        updateStages(updatedStages);\n        updateError(null);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleDelete = (stageId) => {\n    axios\n      .delete(`${config.API_URL}/api/stage/${stageId}/delete`, {\n        withCredentials: true,\n      })\n      .then(() => {\n        let filteredStages = stages.filter((stage) => {\n          return stage._id !== stageId;\n        });\n        updateStages(filteredStages);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  if (!user) {\n    return <Redirect to={\"/\"} />;\n  } else if (user.role !== \"admin\") {\n    return <Redirect to={\"/welcome\"} />;\n  }\n  if (!stages) return <CircularProgress />;\n\n  return (\n    <Grid className={classes.container} container spacing={3}>\n      <AdminNavBar onLogout={onLogout} />\n      <Grid item xs={12}>\n        <AdminNewsTicker\n          news={news}\n          onNew={onNewTicker}\n          showNewForm={showNewTickerForm}\n          handleShowNewForm={handleShowNewTickerForm}\n          error={error}\n        />\n        <StageList\n          onNew={handleNewStage}\n          showNewForm={showNewForm}\n          handleShowNewForm={handleShowNewForm}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          error={error}\n          stages={stages}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 1200,\n  },\n}));\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport config from \"../../config\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\nfunction AdminNavBar(props) {\n  const { onLogout } = props;\n  const festivalName = config.FESTIVAL_NAME;\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand>\n        <Link to=\"/admin\">{festivalName}</Link>\n      </Navbar.Brand>\n\n      <Nav className=\"mr-auto\">\n        <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item variant=\"outline-success\" onClick={onLogout}>\n            Logout\n          </NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default AdminNavBar;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { NewsTicker, TickerNewForm } from \"../..\";\n\nfunction AdminNewsTicker(props) {\n  const { news, onNew, showNewForm, handleShowNewForm, error } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newNews = {\n      message: e.target.message.value,\n      duration: e.target.duration.value,\n    };\n    onNew(newNews);\n  };\n\n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Ticker News\n        {showNewForm ? (\n          <TickerNewForm handleSubmit={handleSubmit} error={error} />\n        ) : (\n          <AddCircleIcon onClick={handleShowNewForm} />\n        )}\n      </Typography>\n      {!showNewForm &&\n        (news ? <NewsTicker news={news} /> : <p>No current ticker news</p>)}\n    </>\n  );\n}\n\nexport default AdminNewsTicker;\n","import React from \"react\";\nimport { makeStyles, Button, TextField, Grid } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction TickerNewForm(props) {\n  const { handleSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form}>\n      {error && (\n        <Alert className={classes.alert} severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <Grid container justify=\"space-between\">\n        <TextField\n          name=\"message\"\n          label=\"Ticker message\"\n          className={classes.message}\n          variant=\"outlined\"\n          required\n          autoFocus\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          name=\"duration\"\n          label=\"Duration in minutes\"\n          type=\"number\"\n          defaultValue={60}\n          className={classes.duration}\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          InputProps={{ inputProps: { min: 1, max: 1440 } }}\n        />\n      </Grid>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Add News\n      </Button>\n      {/* ToDo: Add Cancel Button */}\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  message: {\n    width: \"75%\",\n  },\n  duration: {\n    width: \"24%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nexport default TickerNewForm;\n","import React from \"react\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { StageListRow, StageNewForm } from \"../../index\";\n\nfunction StageList(props) {\n  const {\n    stages,\n    error,\n    onNew,\n    showNewForm,\n    handleShowNewForm,\n    onEdit,\n    onDelete,\n  } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onNew(e.target.name.value);\n  };\n  \n  return (\n    <>\n      <Typography component=\"h1\" variant=\"h5\">\n        Stages\n        {showNewForm ? (\n          <StageNewForm handleSubmit={handleSubmit} error={error} />\n        ) : (\n          <AddCircleIcon onClick={handleShowNewForm} />\n        )}\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stage name</TableCell>\n              <TableCell align=\"right\">Concerts</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {stages.map((stage, i) => {\n              return (\n                <StageListRow\n                  key={i}\n                  error={error}\n                  stage={stage}\n                  onEdit={onEdit}\n                  onDelete={onDelete}\n                />\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n\nexport default StageList;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TableRow, TableCell } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { StageEditForm } from \"../../index\";\n\nfunction StageListRow(props) {\n  const [showEditForm, updateShowEditForm] = useState(false);\n  const { stage, error, onEdit, onDelete } = props;\n\n  const handleUpdate = (stage) => {\n    onEdit(stage);\n    // ToDo: show form if validation errors\n    if (!error) updateShowEditForm(false)\n  };\n\n  const handleShowEditForm = () => {\n    updateShowEditForm(true) \n  };\n\n  return (\n    <TableRow key={stage.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {showEditForm ? (\n          <StageEditForm onEdit={handleUpdate} stage={stage} error={error} />\n        ) : (\n          <Link to={`/admin/${stage.name}/calendar`}>{stage.name}</Link>\n        )}\n      </TableCell>\n      <TableCell align=\"right\">\n        {stage.concerts.length}\n      </TableCell>\n      <TableCell align=\"right\">\n        {!showEditForm ? <EditIcon onClick={handleShowEditForm} /> : \"\"}\n        <DeleteIcon onClick={() => onDelete(stage._id)}/>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default StageListRow;\n","import React from \"react\";\nimport { makeStyles, Button, TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction StageNewForm(props) {\n  const { handleSubmit, error } = props;\n  const classes = useStyles();\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form} noValidate=\"off\">\n      {error && (\n        <Alert className={classes.alert} severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <TextField\n        name=\"name\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        label=\"Stage name\"\n        autoFocus\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Add Stage\n      </Button>\n      {/* ToDo: Add Cancel Button */}\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default StageNewForm;\n","import React, { useState } from 'react'\nimport { makeStyles, Button, TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction StageEditForm(props) {\n  const [stage, updateStage] = useState(props.stage)\n  const { error, onEdit } = props;\n  const classes = useStyles();\n\n  const handleNameChange = (event) => {\n    let text = event.target.value\n    let clonedStage = JSON.parse(JSON.stringify(stage))\n    clonedStage.name = text\n\n    updateStage(clonedStage)\n  }\n\n  return (\n    <>\n      {error && (\n        <Alert className={classes.alert} severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <TextField\n        name=\"name\"\n        variant=\"outlined\"\n        required\n        fullWidth\n        label=\"Stage name\"\n        autoFocus\n        onChange={handleNameChange} \n        value={stage.name}\n      />\n      <Button\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        onClick={ () => { onEdit(stage) } }\n      >\n        Update Stage\n      </Button>\n      {/* ToDo: Add Cancel Button */}\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default StageEditForm\n","import axios from \"axios\";\nimport config from \"../../../config\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport {\n  CircularProgress,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { ConcertNewForm, AdminConcertDetail, AdminNavBar } from \"../../index\";\n\nfunction AdminCalendar(props) {\n  const { user, onLogout } = props;\n  const [stage, updateStage] = useState({});\n  const [error, updateError] = useState(null);\n  const [concerts, updateConcerts] = useState([]);\n  const [newFormOpen, updateNewFormOpen] = useState(false);\n  const [dateOnNew, updateDateOnNew] = useState(\"\");\n  const [showOpen, updateShowOpen] = useState(false);\n  const [concert, updateConcert] = useState(null);\n  const classes = useStyles();\n  const festivalStart = config.FESTIVAL_START_DATE;\n  const festivalEnd = config.FESTIVAL_END_DATE;\n\n  // get all concerts on mount\n  useEffect(() => {\n    let stageName = props.match.params.stageName;\n\n    axios\n      .get(`${config.API_URL}/api/stage/${stageName}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        const stage = res.data;\n\n        updateStage(stage);\n        updateConcerts(\n          stage.concerts.map((concert) => {\n            // map concerts to fullcalendar entries\n            return {\n              resourceId: stage._id,\n              title: concert.bandname,\n              start: concert.starttime,\n              end: concert.endtime,\n            };\n          })\n        );\n      })\n      .catch((err) => updateError(err.response.data));\n  }, [concerts]);\n\n  // helper function to toggle overlay\n  const toggleNewForm = () => {\n    updateNewFormOpen(!newFormOpen);\n  };\n\n  // toggle new form when calendar date is clicked\n  const handleDateClick = (calendar) => {\n    updateDateOnNew(calendar.dateStr);\n    toggleNewForm();\n  };\n\n  // create new concert after submitting the form\n  const handleNewConcert = (e) => {\n    e.preventDefault();\n    const starttime = new Date(\n      `${e.target.day.value}T${e.target.starttime.value}`\n    );\n    const endtime = new Date(`${e.target.day.value}T${e.target.endtime.value}`);\n\n    axios\n      .post(\n        `${config.API_URL}/api/stages/${stage._id}/concerts/create`,\n        {\n          bandname: e.target.bandname.value,\n          starttime: starttime,\n          endtime: endtime,\n          description: e.target.description.value,\n          image: e.target.image.value,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        const concert = res.data;\n        // map new concert to fullcalendar entriy\n        const newConcert = {\n          resourceId: stage._id,\n          title: concert.bandname,\n          start: concert.starttime,\n          end: concert.endtime,\n        };\n\n        updateConcerts([newConcert, ...concerts]);\n        updateError(null);\n        toggleNewForm();\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // get concert when calender event is clicked\n  const handleEventClick = (calendar) => {\n    const bandname = calendar.event._def.title;\n\n    axios\n      .get(`${config.API_URL}/api/concerts/${bandname}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateConcert(res.data);\n        toggleShowOpen();\n      });\n  };\n\n  const handleDelete = (concertId) => {\n    axios\n      .delete(`${config.API_URL}/api/concerts/${concertId}/delete`, {\n        withCredentials: true,\n      })\n      .then((deleted) => {\n        let filtered = concerts.filter(\n          (concert) => concert.title !== deleted.bandname\n        );\n        updateConcerts(filtered);\n        updateError(null);\n        toggleShowOpen();\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  if (!user) {\n    return <Redirect to={\"/\"} />;\n  } else if (user.role !== \"admin\") {\n    return <Redirect to={\"/welcome\"} />;\n  }\n  if (!stage) return <CircularProgress />;\n\n  return (\n    <Grid className={classes.container} container spacing={3}>\n      <AdminNavBar onLogout={onLogout} />\n      <Grid item xs={12}>\n        <Typography component=\"h1\" variant=\"h5\">\n          {stage.name} - Concerts\n        </Typography>\n        <FullCalendar\n          plugins={[\n            resourceTimeGridPlugin,\n            scrollGridPlugin,\n            interactionPlugin,\n          ]}\n          initialView=\"resourceTimeGrid\"\n          validRange={{ start: festivalStart, end: festivalEnd }}\n          visibleRange={{ start: festivalStart, end: festivalEnd }}\n          headerToolbar={{ start: \"\", center: \"title\", end: \"\" }}\n          allDaySlot={false}\n          dayMinWidth={260}\n          height={\"auto\"}\n          resources={[{ id: stage._id, title: \" \" }]}\n          events={concerts}\n          dateClick={handleDateClick}\n          eventClick={handleEventClick}\n        />\n        {/* render new form as overlay */}\n        <ModalProvider>\n          <StyledModal\n            isOpen={newFormOpen}\n            onBackgroundClick={toggleNewForm}\n            onEscapeKeydown={toggleNewForm}\n          >\n            <ConcertNewForm\n              festivalStart={festivalStart}\n              festivalEnd={festivalEnd}\n              dateOnNew={dateOnNew}\n              onSubmit={handleNewConcert}\n              error={error}\n            />\n          </StyledModal>\n        </ModalProvider>\n        {/* render show concert details as overlay */}\n        <ModalProvider>\n          <StyledModal\n            isOpen={showOpen}\n            onBackgroundClick={toggleShowOpen}\n            onEscapeKeydown={toggleShowOpen}\n          >\n            <AdminConcertDetail\n              stageName={stage.name}\n              concert={concert}\n              onDelete={handleDelete}\n            />\n          </StyledModal>\n        </ModalProvider>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 1200,\n  },\n}));\n\nconst StyledModal = Modal.styled`\n  width: 40rem;\n  height: 40rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n`;\n\nexport default AdminCalendar;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\n\nfunction ConcertNewForm(props) {\n  const { festivalStart, festivalEnd, dateOnNew, onSubmit, error } = props;\n  const classes = useStyles();\n  \n  return (\n    <form onSubmit={onSubmit} className={classes.form} noValidate=\"off\">\n      <Typography component=\"h1\" variant=\"h5\">\n        Add new Concert\n      </Typography>\n      {error && (\n        <Alert className={classes.alert} severity=\"error\">\n          {error.errorMessage}\n        </Alert>\n      )}\n      <TextField\n        name=\"bandname\"\n        label=\"Bandname\"\n        className={classes.input}\n        variant=\"outlined\"\n        required\n        fullWidth\n        autoFocus\n      />\n      <Grid container justify=\"space-between\">\n        <TextField\n          name=\"day\"\n          label=\"Day\"\n          type=\"date\"\n          className={classes.picker}\n          variant=\"outlined\"\n          defaultValue={moment(dateOnNew).format(\"yyyy-MM-DD\")}\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          InputProps={{inputProps: { min: festivalStart, max: festivalEnd} }}\n        />\n        <TextField\n          name=\"starttime\"\n          label=\"Start time\"\n          type=\"time\"\n          defaultValue={moment(dateOnNew).format(\"hh:mm:ss\")}\n          className={classes.picker}\n          variant=\"outlined\"\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300, // 5 min\n          }}\n        />\n        <TextField\n          name=\"endtime\"\n          label=\"Endtime time\"\n          type=\"time\"\n          defaultValue={moment(dateOnNew).add(2, \"h\").format(\"hh:mm:ss\")}\n          className={classes.picker}\n          variant=\"outlined\"\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 9000, //  15min\n          }}\n        />\n      </Grid>\n      <TextField\n        className={classes.input}\n        name=\"image\"\n        type=\"url\"\n        placeholder=\"https://\"\n        variant=\"outlined\"\n        fullWidth\n        label=\"Band image\"\n        autoFocus\n      />\n      <TextField\n        className={classes.input}\n        name=\"description\"\n        variant=\"outlined\"\n        multiline\n        rows={4}\n        fullWidth\n        label=\"Band description\"\n        autoFocus\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        Add Concert\n      </Button>\n      {/* ToDo: Add Cancel Button */}\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  form: {\n    width: \"100%\",\n    padding: theme.spacing(3),\n  },\n  input: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  picker: {\n    width: \"30%\",\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default ConcertNewForm;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nfunction ConcertDetail(props) {\n  const { stageName, concert, onDelete } = props;\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.container}>\n      <CardMedia\n        component=\"img\"\n        height=\"300\"\n        alt={`${concert.title}-image`}\n        src={concert.image}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {concert.bandname}\n        </Typography>\n        <Typography gutterBottom variant=\"body2\">\n          {moment(concert.starttime).format(\"yyyy-MM-DD\")} from{\" \"}\n          {moment(concert.starttime).format(\"hh:mm A\")} to{\" \"}\n          {moment(concert.enttime).format(\"hh:mm A\")} on {stageName}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {concert.description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => { onDelete(concert._id) }} size=\"small\" color=\"primary\">\n          delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles({\n  container: {\n    minHeight: \"35rem\",\n    minWidth: \"35rem\",\n    margin: \"auto\"\n  }\n})\n\nexport default ConcertDetail;\n","import axios from \"axios\";\nimport config from \"../../config\";\nimport { React, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { NewsTicker, UpcomingList, UserNavBar } from \"../index\";\n\nfunction UserDashboard(props) {\n  const { user, news, favorites, updateFavorite, onLogout } = props;\n  const [upcomingHeader, updateUpcomingHeader] = useState(\"\");\n  const [upcoming, updateUpcoming] = useState([]);\n  const classes = useStyles();\n\n  // fetch data on update\n  useEffect(() => {\n    // get upcoming favorites\n    axios\n      .get(`${config.API_URL}/api/upcoming/favorites`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        const upcomingFavorites = res.data;\n\n        // if no upcoming favorites get next 5 concerts\n        if (upcomingFavorites.length == 0) {\n          axios\n            .get(`${config.API_URL}/api/upcoming`, { withCredentials: true })\n            .then((res) => {\n              updateUpcoming(res.data);\n              updateUpcomingHeader(\"Next upcoming shows\");\n            });\n        } else {\n          updateUpcoming(upcomingFavorites);\n          updateUpcomingHeader(\"Your next upcoming shows\");\n        }\n      });\n  }, [favorites]);\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <Grid className={classes.container} container spacing={3}>\n      <UserNavBar onLogout={onLogout} />\n      <Grid item xs={12}>\n        {news && <NewsTicker news={news} />}\n        <h1>Hello {user.name}</h1>\n        <UpcomingList\n          user={user}\n          concerts={upcoming}\n          favorites={favorites}\n          updateFavorite={updateFavorite}\n          header={upcomingHeader}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 1000,\n  },\n}));\n\nexport default UserDashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport config from \"../../config\";\n\nfunction UserNavBar(props) {\n  const { onLogout } = props;\n  const festivalName = config.FESTIVAL_NAME;\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand>\n        <Link to=\"/welcome\">{festivalName}</Link>\n      </Navbar.Brand>\n\n      <Nav className=\"mr-auto\">\n        <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item>\n            <Link to=\"/timetable\">Timetable</Link>\n          </NavDropdown.Item>\n\n          <NavDropdown.Item>\n            <Link to=\"/lineup\">Lineup</Link>\n          </NavDropdown.Item>\n\n          <NavDropdown.Divider />\n          <NavDropdown.Item variant=\"outline-success\" onClick={onLogout}>\n            Logout\n          </NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar>\n  );\n}\n\nexport default UserNavBar;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport { ConcertDetail } from \"../../index\";\n\nfunction UpcomingList(props) {\n  const { header, concerts, favorites, updateFavorite } = props;\n  const [concert, updateConcert] = useState(null);\n  const [showOpen, updateShowOpen] = useState(false);\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // handle Click on ListItem\n  const handleClick = (concert) => {\n    updateConcert(concert);\n    toggleShowOpen();\n  };\n\n  return (\n    <>\n      <h2> {header} </h2>\n      <Link to={\"/timetable\"}>Timetable</Link>\n      <Link to={\"/lineup\"}>Lineup</Link>\n      <List>\n        {concerts.map((concert, i) => {\n          return (\n            <ListItem\n              key={i}\n              onClick={() => {\n                handleClick(concert);\n              }}\n            >\n              <ListItemText\n                primary={concert.bandname}\n                secondary={`${moment(concert.starttime).format(\n                  \"yyyy-MM-DD\"\n                )} starts ${moment(concert.starttime).format(\"hh:mm A\")} on ${\n                  concert.stage.name\n                }`}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n      {/* render show concert details as overlay */}\n      {concert && (\n        <ModalProvider>\n          <StyledModal\n            isOpen={showOpen}\n            onBackgroundClick={toggleShowOpen}\n            onEscapeKeydown={toggleShowOpen}\n          >\n            <ConcertDetail\n              concert={concert}\n              favorites={favorites}\n              updateFavorite={updateFavorite}\n            />\n          </StyledModal>\n        </ModalProvider>\n      )}\n    </>\n  );\n}\n\nconst StyledModal = Modal.styled`\n  width: 20rem;\n  height: 20rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n`;\n\nexport default UpcomingList;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { ConcertDetail, UserNavBar } from \"../../index\";\n\nfunction ConcertList(props) {\n  const { user, concerts, favorites, updateFavorite, onLogout } = props;\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <>\n      <UserNavBar onLogout={onLogout} />\n      {concerts.map((concert, i) => {\n        return (\n          <ConcertDetail\n            key={i}\n            concert={concert}\n            favorites={favorites}\n            updateFavorite={updateFavorite}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default ConcertList;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Collapse,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport moment from \"moment\";\n\nfunction ConcertDetail(props) {\n  const { concert, favorites, updateFavorite } = props;\n  const [expanded, setExpanded] = useState(false);\n  const [isFavorite, updateIsFavorite] = useState(false);\n  const classes = useStyles();\n\n  const playtime = `${moment(concert.starttime).format(\"dddd LT\")} - ${\n    concert.stage.name\n  }`;\n\n  useEffect(() => {\n    favorites.some((i) => i._id == concert._id)\n      ? updateIsFavorite(true)\n      : updateIsFavorite(false);\n  });\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        className={classes.test}\n        action={\n          <IconButton\n            onClick={() => {\n              updateFavorite(concert);\n            }}\n            aria-label=\"toggle favorites\"\n          >\n            {isFavorite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n          </IconButton>\n        }\n        title={concert.bandname}\n        subheader={playtime}\n      />\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <CardMedia\n            className={classes.media}\n            image={concert.image}\n            title={concert.bandname}\n          />\n\n          <Typography paragraph></Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {concert.description}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    //background: `blue`,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n}));\n\nexport default ConcertDetail;\n","import axios from \"axios\";\nimport config from \"../../../config\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport scrollGridPlugin from \"@fullcalendar/scrollgrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport Modal, { ModalProvider } from \"styled-react-modal\";\nimport { UserNavBar, ConcertDetail } from \"../../index\";\n\nfunction Calendar(props) {\n  const { user, stages, concerts, favorites, updateFavorite, onLogout } = props;\n  const [showOpen, updateShowOpen] = useState(false);\n  const [concert, updateConcert] = useState(null);\n  const classes = useStyles();\n  const festivalStart = config.FESTIVAL_START_DATE;\n  const festivalEnd = config.FESTIVAL_END_DATE;\n\n  // helper function to toggle overlay\n  const toggleShowOpen = () => {\n    updateShowOpen(!showOpen);\n  };\n\n  // get concert when calender event is clicked\n  const handleEventClick = (calendar) => {\n    const bandname = calendar.event._def.title;\n\n    axios\n      .get(`${config.API_URL}/api/concerts/${bandname}`, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateConcert(res.data);\n        toggleShowOpen();\n      });\n  };\n\n  if (!user) return <Redirect to={\"/\"} />;\n\n  return (\n    <Grid className={classes.container} container spacing={3}>\n      <UserNavBar onLogout={onLogout} />\n      <Grid item xs={12}>\n        <FullCalendar\n          plugins={[\n            resourceTimeGridPlugin,\n            scrollGridPlugin,\n            interactionPlugin,\n          ]}\n          initialView=\"resourceTimeGridDay\"\n          validRange={{ start: festivalStart, end: festivalEnd }}\n          visibleRange={{ start: festivalStart, end: festivalEnd }}\n          headerToolbar={{ start: \"\", center: \"title\", end: \"prev,next\" }}\n          allDaySlot={false}\n          dayMinWidth={260}\n          height={\"auto\"}\n          resources={stages}\n          events={concerts}\n          eventClick={handleEventClick}\n        />\n        {/* render show concert details as overlay */}\n        <ModalProvider>\n          <StyledModal\n            isOpen={showOpen}\n            onBackgroundClick={toggleShowOpen}\n            onEscapeKeydown={toggleShowOpen}\n          >\n            <ConcertDetail\n              concert={concert}\n              favorites={favorites}\n              updateFavorite={updateFavorite}\n            />\n          </StyledModal>\n        </ModalProvider>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 1200,\n  },\n}));\n\nconst StyledModal = Modal.styled`\n  width: 20rem;\n  height: 20rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n`;\n\nexport default Calendar;\n","import React from \"react\";\nimport Ticker from \"react-ticker\";\n\nfunction NewsTicker(props) {\n  const { news } = props;\n\n  return (\n    <Ticker>\n      {() => <p style={{ whiteSpace: \"nowrap\" }}> {news.join(\" +++ \")} +++</p>}\n    </Ticker>\n  );\n}\n\nexport default NewsTicker;\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\n\nfunction LottieControl(props) {\n  const { height, width, animation } = props;\n  //animation json input, siehe NotFound\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  return (\n    <div>\n      <Lottie options={defaultOptions} height={height} width={width} />\n    </div>\n  );\n}\nexport default LottieControl;\n","import React, { Component } from \"react\";\nimport data from \"./animation/animation.json\";\nimport LottieControl from \"./LottieControl\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h2>404</h2>\n        <h5>you are at the wrong campsite, the festival is not here</h5>\n        <LottieControl animation={data} />\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\nimport config from \"./config\";\nimport { React, useState, useEffect } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport {\n  SignUp,\n  SignIn,\n  AdminDashboard,\n  AdminCalendar,\n  UserDashboard,\n  ConcertList,\n  Calendar,\n  NotFound,\n} from \"./components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App(props) {\n  const [user, updateUser] = useState(null);\n  const [fetchingUser, updateFetchingUser] = useState(true);\n  const [concerts, updateConcerts] = useState([]);\n  const [favorites, updateFavorites] = useState([]);\n  const [calendarStages, updateCalendarStages] = useState([]);\n  const [calendarEvents, updateCalendarEvents] = useState([]);\n  const [news, updateNews] = useState(null);\n  const [showNewTickerForm, updateShowNewTickerForm] = useState(false);\n  const [redirectPath, updateRedirectPath] = useState(null);\n  const [error, updateError] = useState(null);\n  const { history } = props;\n  const festivalName = config.FESTIVAL_NAME;\n\n  // handle redirects\n  useEffect(() => {\n    if (redirectPath === \"signin\") {\n      history.push(\"/\");\n    } else if (redirectPath === \"adminDashboard\") {\n      history.push(\"/admin\");\n    } else if (redirectPath === \"userDashboard\") {\n      history.push(\"/welcome\");\n    }\n  }, [history, redirectPath]);\n\n  // fetch data on mount\n  useEffect(() => {\n    // check if user has a session\n    axios\n      .get(`${config.API_URL}/api/user`, { withCredentials: true })\n      .then((res) => {\n        updateUser(res.data);\n        updateFavorites(res.data.concerts);\n        updateFetchingUser(false);\n      })\n      .catch(() => {\n        updateFetchingUser(false);\n        updateRedirectPath(\"signin\");\n      });\n\n    // get all stages and map to fullcalendar resources\n    axios\n      .get(`${config.API_URL}/api/stages`, { withCredentials: true })\n      .then((res) => {\n        updateCalendarStages(\n          res.data.map((stage) => {\n            return {\n              id: stage._id,\n              title: stage.name,\n            };\n          })\n        );\n      })\n      .catch((err) => updateError(err.response.data));\n\n    // get all concerts\n    axios\n      .get(`${config.API_URL}/api/concerts`, { withCredentials: true })\n      .then((res) => {\n        const concerts = res.data;\n\n        updateConcerts(concerts);\n        // map concerts also to fullcalendar entries\n        updateCalendarEvents(\n          concerts.map((concert) => {\n            return {\n              resourceId: concert.stage._id,\n              title: concert.bandname,\n              start: concert.starttime,\n              end: concert.endtime,\n            };\n          })\n        );\n      });\n\n    // Ticker messages (news)\n    // get once on components mount\n    handleGetNews();\n    // then fetch every minute\n    try {\n      setInterval(async () => {\n        await handleGetNews();\n      }, 10000);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // handle get news\n  const handleGetNews = () => {\n    axios\n      .get(`${config.API_URL}/api/news`, { withCredentials: true })\n      .then((res) => {\n        const news = res.data;\n\n        if (news) {\n          updateNews(news?.map((msg) => msg.message));\n        } else {\n          updateNews(null);\n        }\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n    const { name, password, passwordConfirmation } = e.target;\n    let newUser = {\n      name: name.value,\n      password: password.value,\n      passwordConfirmation: passwordConfirmation.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/auth/signup`, newUser, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateUser(res.data);\n        updateError(null);\n        updateRedirectPath(\"userDashboard\");\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    const { name, password } = e.target;\n    let user = {\n      name: name.value,\n      password: password.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/auth/signin`, user, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        updateUser(res.data);\n        updateError(null);\n\n        if (res.data.role === \"admin\") {\n          updateRedirectPath(\"adminDashboard\");\n        } else {\n          updateRedirectPath(\"userDashboard\");\n        }\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    axios\n      .get(`${config.API_URL}/api/auth/logout`, { withCredentials: true })\n      .then(() => {\n        updateUser(null);\n        updateRedirectPath(\"signin\");\n      })\n      .catch((err) => {\n        updateError(err.response.data);\n      });\n  };\n\n  const handleUpdateFavorite = (concert) => {\n    axios\n      .post(\n        `${config.API_URL}/api/upcoming/update`,\n        { favorites, concert },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        updateFavorites(res.data);\n        updateError(null);\n      })\n      .catch((err) => updateError(err.response.data));\n  };\n\n  const handleNewTicker = (newMessage) => {\n    axios\n      .post(\n        `${config.API_URL}/api/news/create`,\n        {\n          message: newMessage.message,\n          duration: newMessage.duration,\n        },\n        { withCredentials: true }\n      )\n      .then((res) => {\n        updateNews([res.data.message, ...news]);\n        updateError(null);\n        updateShowNewTickerForm(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleShowNewTickerForm = () => {\n    updateShowNewTickerForm(true);\n  };\n\n  if (fetchingUser) return <CircularProgress />;\n\n  return (\n    <>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return (\n              <SignIn\n                festivalName={festivalName}\n                error={error}\n                onSubmit={handleSignIn}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/signup\"\n          render={() => {\n            return (\n              <SignUp\n                festivalName={festivalName}\n                error={error}\n                onSubmit={handleSignUp}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/welcome\"\n          render={() => {\n            return (\n              <UserDashboard\n                user={user}\n                news={news}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/lineup\"\n          render={() => {\n            return (\n              <ConcertList\n                user={user}\n                concerts={concerts}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/timetable\"\n          render={() => {\n            return (\n              <Calendar\n                user={user}\n                stages={calendarStages}\n                concerts={calendarEvents}\n                favorites={favorites}\n                updateFavorite={handleUpdateFavorite}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/admin\"\n          render={() => {\n            return (\n              <AdminDashboard\n                user={user}\n                news={news}\n                onNewTicker={handleNewTicker}\n                showNewTickerForm={showNewTickerForm}\n                handleShowNewTickerForm={handleShowNewTickerForm}\n                onLogout={handleLogout}\n              />\n            );\n          }}\n        />\n        <Route\n          path=\"/admin/:stageName/calendar\"\n          render={(routeProps) => {\n            return (\n              <AdminCalendar\n                user={user}\n                onLogout={handleLogout}\n                {...routeProps}\n              />\n            );\n          }}\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}